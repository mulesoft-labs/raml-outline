{
  "title": "X-Tracker",
  "description": "Headers that allowed at this position",
  "type": null,
  "children": [
    {
      "title": "name",
      "description": "name of the parameter",
      "type": "ATTRIBUTETEXT",
      "children": [],
      "valueText": "X-Tracker"
    },
    {
      "title": "General",
      "description": "",
      "type": "CATEGORY",
      "children": [
        {
          "title": "allowedTargets",
          "description": "Restrictions on where annotations of this type can be applied. If this property is specified, annotations of this type may only be applied on a property corresponding to one of the target names specified as the value of this property.",
          "type": "MULTIEDITOR",
          "children": [],
          "valueText": ""
        },
        {
          "title": "default",
          "description": "Provides default value for a property",
          "type": "ATTRIBUTETEXT",
          "children": [],
          "valueText": null
        },
        {
          "title": "isAnnotation",
          "description": "Whether the type represents annotation",
          "type": "CHECKBOX",
          "children": [],
          "valueText": "false"
        },
        {
          "title": "required",
          "description": "Sets if property is optional or not",
          "type": "CHECKBOX",
          "children": [],
          "valueText": "false"
        },
        {
          "title": "example",
          "description": "An example of this type instance represented as string or yaml map/sequence. This can be used, e.g., by documentation generators to generate sample values for an object of this type. Cannot be present if the examples property is present.",
          "type": "TREE",
          "children": [],
          "valueText": null
        }
      ],
      "valueText": null
    },
    {
      "title": "Documentation",
      "description": "",
      "type": "CATEGORY",
      "children": [
        {
          "title": "displayName",
          "description": "The displayName attribute specifies the type display name. It is a friendly name used only for  display or documentation purposes. If displayName is not specified, it defaults to the element's key (the name of the property itself).",
          "type": "ATTRIBUTETEXT",
          "children": [],
          "valueText": null
        },
        {
          "title": "description",
          "description": "A longer, human-friendly description of the type",
          "type": "MARKDOWN",
          "children": [],
          "valueText": "A code to track API calls end to end"
        }
      ],
      "valueText": null
    },
    {
      "title": "Facets",
      "description": "",
      "type": "CATEGORY",
      "children": [
        {
          "title": "enum",
          "description": "(Optional, applicable only for parameters of type string) The enum attribute provides an enumeration of the parameter's valid values. This MUST be an array. If the enum attribute is defined, API clients and servers MUST verify that a parameter's value matches a value in the enum array. If there is no matching value, the clients and servers MUST treat this as an error.",
          "type": "MULTIEDITOR",
          "children": [],
          "valueText": ""
        },
        {
          "title": "maxLength",
          "description": "Maximum length of the string",
          "type": "ATTRIBUTETEXT",
          "children": [],
          "valueText": null
        },
        {
          "title": "minLength",
          "description": "Minimum length of the string",
          "type": "ATTRIBUTETEXT",
          "children": [],
          "valueText": null
        },
        {
          "title": "pattern",
          "description": "Regular expression that this string should path",
          "type": "ATTRIBUTETEXT",
          "children": [],
          "valueText": "^\\w{16}$"
        }
      ],
      "valueText": null
    },
    {
      "title": "type",
      "description": "A base type which the current type extends, or more generally a type expression.",
      "type": "MULTIEDITOR",
      "children": [],
      "valueText": ""
    },
    {
      "title": "Type",
      "description": "",
      "type": "CATEGORY",
      "children": [
        {
          "title": "Type",
          "description": "A base type which the current type extends, or more generally a type expression.",
          "type": "TYPEDISPLAY",
          "children": [],
          "valueText": null
        }
      ],
      "valueText": null
    }
  ],
  "valueText": null,
  "nodeId": "./jobs.post.X-Tracker"
}