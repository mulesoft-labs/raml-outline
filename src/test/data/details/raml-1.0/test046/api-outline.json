{
  "title": "aa",
  "description": "Alias for the equivalent \"types\" property, for compatibility with RAML 0.8. Deprecated - API definitions should use the \"types\" property, as the \"schemas\" alias for that property name may be removed in a future RAML version. The \"types\" property allows for XML and JSON schemas.",
  "type": null,
  "children": [
    {
      "title": "name",
      "description": "name of the parameter",
      "type": "ATTRIBUTETEXT",
      "children": [],
      "valueText": "aa"
    },
    {
      "title": "General",
      "description": "",
      "type": "CATEGORY",
      "children": [
        {
          "title": "allowedTargets",
          "description": "Restrictions on where annotations of this type can be applied. If this property is specified, annotations of this type may only be applied on a property corresponding to one of the target names specified as the value of this property.",
          "type": "MULTIEDITOR",
          "children": [],
          "valueText": ""
        },
        {
          "title": "default",
          "description": "Provides default value for a property",
          "type": "ATTRIBUTETEXT",
          "children": [],
          "valueText": null
        },
        {
          "title": "isAnnotation",
          "description": "Whether the type represents annotation",
          "type": "CHECKBOX",
          "children": [],
          "valueText": "false"
        }
      ],
      "valueText": null
    },
    {
      "title": "Documentation",
      "description": "",
      "type": "CATEGORY",
      "children": [
        {
          "title": "displayName",
          "description": "The displayName attribute specifies the type display name. It is a friendly name used only for  display or documentation purposes. If displayName is not specified, it defaults to the element's key (the name of the property itself).",
          "type": "ATTRIBUTETEXT",
          "children": [],
          "valueText": null
        },
        {
          "title": "description",
          "description": "A longer, human-friendly description of the type",
          "type": "MARKDOWN",
          "children": [],
          "valueText": null
        }
      ],
      "valueText": null
    },
    {
      "title": "type",
      "description": "A base type which the current type extends, or more generally a type expression.",
      "type": "XMLSCHEMA",
      "children": [],
      "valueText": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\n\n<xs:element name=\"shiporder\">\n  <xs:complexType>\n    <xs:sequence>\n      <xs:element name=\"orderperson\" type=\"xs:string\"/>\n      <xs:element name=\"shipto\">\n        <xs:complexType>\n          <xs:sequence>\n            <xs:element name=\"name\" type=\"xs:string\"/>\n            <xs:element name=\"address\" type=\"xs:string\"/>\n            <xs:element name=\"city\" type=\"xs:string\"/>\n            <xs:element name=\"country\" type=\"xs:string\"/>\n          </xs:sequence>\n        </xs:complexType>\n      </xs:element>\n      <xs:element name=\"item\" maxOccurs=\"unbounded\">\n        <xs:complexType>\n          <xs:sequence>\n            <xs:element name=\"title\" type=\"xs:string\"/>\n            <xs:element name=\"note\" type=\"xs:string\" minOccurs=\"0\"/>\n            <xs:element name=\"quantity\" type=\"xs:positiveInteger\"/>\n            <xs:element name=\"price\" type=\"xs:decimal\"/>\n          </xs:sequence>\n        </xs:complexType>\n      </xs:element>\n    </xs:sequence>\n    <xs:attribute name=\"orderid\" type=\"xs:string\" use=\"required\"/>\n  </xs:complexType>\n</xs:element>\n\n</xs:schema>\n"
    },
    {
      "title": "Type",
      "description": "",
      "type": "CATEGORY",
      "children": [
        {
          "title": "Type",
          "description": "A base type which the current type extends, or more generally a type expression.",
          "type": "TYPEDISPLAY",
          "children": [],
          "valueText": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\n\n<xs:element name=\"shiporder\">\n  <xs:complexType>\n    <xs:sequence>\n      <xs:element name=\"orderperson\" type=\"xs:string\"/>\n      <xs:element name=\"shipto\">\n        <xs:complexType>\n          <xs:sequence>\n            <xs:element name=\"name\" type=\"xs:string\"/>\n            <xs:element name=\"address\" type=\"xs:string\"/>\n            <xs:element name=\"city\" type=\"xs:string\"/>\n            <xs:element name=\"country\" type=\"xs:string\"/>\n          </xs:sequence>\n        </xs:complexType>\n      </xs:element>\n      <xs:element name=\"item\" maxOccurs=\"unbounded\">\n        <xs:complexType>\n          <xs:sequence>\n            <xs:element name=\"title\" type=\"xs:string\"/>\n            <xs:element name=\"note\" type=\"xs:string\" minOccurs=\"0\"/>\n            <xs:element name=\"quantity\" type=\"xs:positiveInteger\"/>\n            <xs:element name=\"price\" type=\"xs:decimal\"/>\n          </xs:sequence>\n        </xs:complexType>\n      </xs:element>\n    </xs:sequence>\n    <xs:attribute name=\"orderid\" type=\"xs:string\" use=\"required\"/>\n  </xs:complexType>\n</xs:element>\n\n</xs:schema>\n"
        }
      ],
      "valueText": null
    }
  ],
  "valueText": null,
  "nodeId": ".aa"
}