{
  "title": "BodyLike",
  "description": "Each response MAY contain a body property, which conforms to the same structure as request body properties (see Body). Responses that can return more than one response code MAY therefore have multiple bodies defined. For APIs without a priori knowledge of the response types for their responses, `*/*` MAY be used to indicate that responses that do not matching other defined data types MUST be accepted. Processing applications MUST match the most descriptive media type first if `*/*` is used.",
  "type": null,
  "children": [
    {
      "title": "name",
      "description": "Mime type of the request or response body",
      "type": "ATTRIBUTETEXT",
      "children": [],
      "valueText": "application/xml"
    },
    {
      "title": "General",
      "description": "",
      "type": "CATEGORY",
      "children": [
        {
          "title": "example",
          "description": "Documentation generators MUST use body properties' example attributes to generate example invocations.",
          "type": "ATTRIBUTETEXT",
          "children": [],
          "valueText": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<shiporder orderid=\"889923\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:noNamespaceSchemaLocation=\"shiporder.xsd\">\n  <orderperson>John Smith</orderperson>\n  <shipto>\n    <name>Ola Nordmann</name>\n    <address>Langgt 23</address>\n    <city>4000 Stavanger</city>\n    <country>Norway</country>\n  </shipto>\n  <item>\n    <title>Empire Burlesque</title>\n    <note>Special Edition</note>\n    <quantity>1</quantity>\n    <price>10.90</price>\n  </item>\n  <item>\n    <title>Hide your heart</title>\n    <quantity>1</quantity>\n    <price>9.90</price>\n  </item>\n</shiporder>\n"
        },
        {
          "title": "schema",
          "description": "The structure of a request or response body MAY be further specified by the schema property under the appropriate media type. The schema key CANNOT be specified if a body's media type is application/x-www-form-urlencoded or multipart/form-data. All parsers of RAML MUST be able to interpret JSON Schema and XML Schema. Schema MAY be declared inline or in an external file. However, if the schema is sufficiently large so as to make it difficult for a person to read the API definition, or the schema is reused across multiple APIs or across multiple miles in the same API, the !include user-defined data type SHOULD be used instead of including the content inline. Alternatively, the value of the schema field MAY be the name of a schema specified in the root-level schemas property, or it MAY be declared in an external file and included by using the by using the RAML !include user-defined data type.",
          "type": "ATTRIBUTETEXT",
          "children": [],
          "valueText": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\n\n<xs:element name=\"shiporder\">\n  <xs:complexType>\n    <xs:sequence>\n      <xs:element name=\"orderperson\" type=\"xs:string\"/>\n      <xs:element name=\"shipto\">\n        <xs:complexType>\n          <xs:sequence>\n            <xs:element name=\"name\" type=\"xs:string\"/>\n            <xs:element name=\"address\" type=\"xs:string\"/>\n            <xs:element name=\"city\" type=\"xs:string\"/>\n            <xs:element name=\"country\" type=\"xs:string\"/>\n          </xs:sequence>\n        </xs:complexType>\n      </xs:element>\n      <xs:element name=\"item\" maxOccurs=\"unbounded\">\n        <xs:complexType>\n          <xs:sequence>\n            <xs:element name=\"title\" type=\"xs:string\"/>\n            <xs:element name=\"note\" type=\"xs:string\" minOccurs=\"0\"/>\n            <xs:element name=\"quantity\" type=\"xs:positiveInteger\"/>\n            <xs:element name=\"price\" type=\"xs:decimal\"/>\n          </xs:sequence>\n        </xs:complexType>\n      </xs:element>\n    </xs:sequence>\n    <xs:attribute name=\"orderid\" type=\"xs:string\" use=\"required\"/>\n  </xs:complexType>\n</xs:element>\n\n</xs:schema>\n"
        }
      ],
      "valueText": null
    },
    {
      "title": "Documentation",
      "description": "",
      "type": "CATEGORY",
      "children": [
        {
          "title": "description",
          "description": "Human readable description of the body",
          "type": "MARKDOWN",
          "children": [],
          "valueText": null
        }
      ],
      "valueText": null
    }
  ],
  "valueText": null,
  "nodeId": "./res.get.200.application/xml"
}