{
  "title": "Api",
  "description": "",
  "type": null,
  "children": [
    {
      "title": "General",
      "description": "",
      "type": "CATEGORY",
      "children": [
        {
          "title": "baseUri",
          "description": "(Optional during development; Required after implementation) A RESTful API's resources are defined relative to the API's base URI. The use of the baseUri field is OPTIONAL to allow describing APIs that have not yet been implemented. After the API is implemented (even a mock implementation) and can be accessed at a service endpoint, the API definition MUST contain a baseUri property. The baseUri property's value MUST conform to the URI specification RFC2396 or a Level 1 Template URI as defined in RFC6570. The baseUri property SHOULD only be used as a reference value.",
          "type": "ATTRIBUTETEXT",
          "children": [],
          "valueText": "/some/base/uri"
        },
        {
          "title": "mediaType",
          "description": "(Optional) The media types returned by API responses, and expected from API requests that accept a body, MAY be defaulted by specifying the mediaType property. This property is specified at the root level of the API definition. The property's value MAY be a single string with a valid media type described in the specification.",
          "type": "ATTRIBUTETEXT",
          "children": [],
          "valueText": null
        },
        {
          "title": "protocols",
          "description": "A RESTful API can be reached HTTP, HTTPS, or both. The protocols property MAY be used to specify the protocols that an API supports. If the protocols property is not specified, the protocol specified at the baseUri property is used. The protocols property MUST be an array of strings, of values `HTTP` and/or `HTTPS`.",
          "type": "MULTIEDITOR",
          "children": [],
          "valueText": ""
        },
        {
          "title": "version",
          "description": "If the RAML API definition is targeted to a specific API version, the API definition MUST contain a version property. The version property is OPTIONAL and should not be used if: The API itself is not versioned. The API definition does not change between versions. The API architect can decide whether a change to user documentation elements, but no change to the API's resources, constitutes a version change. The API architect MAY use any versioning scheme so long as version numbers retain the same format. For example, 'v3', 'v3.0', and 'V3' are all allowed, but are not considered to be equal.",
          "type": "ATTRIBUTETEXT",
          "children": [],
          "valueText": null
        }
      ],
      "valueText": null
    },
    {
      "title": "References",
      "description": "",
      "type": "CATEGORY",
      "children": [
        {
          "title": "securedBy",
          "description": "A list of the security schemes to apply to all methods, these must be defined in the securitySchemes declaration.",
          "type": "MULTIEDITOR",
          "children": [],
          "valueText": ""
        }
      ],
      "valueText": null
    },
    {
      "title": "title",
      "description": "The title property is a short plain text description of the RESTful API. The value SHOULD be suitable for use as a title for the contained user documentation.",
      "type": "ATTRIBUTETEXT",
      "children": [],
      "valueText": "API"
    }
  ],
  "valueText": null
}