{
  "title": "Resource",
  "description": "Resources are identified by their relative URI, which MUST begin with a slash (/). A resource defined as a root-level property is called a top-level resource. Its property's key is the resource's URI relative to the baseUri. A resource defined as a child property of another resource is called a nested resource, and its property's key is its URI relative to its parent resource's URI. Every property whose key begins with a slash (/), and is either at the root of the API definition or is the child property of a resource property, is a resource property. The key of a resource, i.e. its relative URI, MAY consist of multiple URI path fragments separated by slashes; e.g. `/bom/items` may indicate the collection of items in a bill of materials as a single resource. However, if the individual URI path fragments are themselves resources, the API definition SHOULD use nested resources to describe this structure; e.g. if `/bom` is itself a resource then `/items` should be a nested resource of `/bom`, while `/bom/items` should not be used.",
  "type": null,
  "children": [
    {
      "title": "relativeUri",
      "description": "Relative URL of this resource from the parent resource",
      "type": "ATTRIBUTETEXT",
      "children": [],
      "valueText": "/someChildUri"
    },
    {
      "title": "Documentation",
      "description": "",
      "type": "CATEGORY",
      "children": [
        {
          "title": "displayName",
          "description": "An alternate, human-friendly name for the resource",
          "type": "ATTRIBUTETEXT",
          "children": [],
          "valueText": null
        },
        {
          "title": "description",
          "description": "The description attribute describes the intended use or meaning of the $self. This value MAY be formatted using Markdown.",
          "type": "MARKDOWN",
          "children": [],
          "valueText": null
        }
      ],
      "valueText": null
    },
    {
      "title": "References",
      "description": "",
      "type": "CATEGORY",
      "children": [
        {
          "title": "is",
          "description": "Instantiation of applyed traits",
          "type": "MULTIEDITOR",
          "children": [],
          "valueText": ""
        },
        {
          "title": "securedBy",
          "description": "securityScheme may also be applied to a resource by using the securedBy key, which is equivalent to applying the securityScheme to all methods that may be declared, explicitly or implicitly, by defining the resourceTypes or traits property for that resource. To indicate that the method may be called without applying any securityScheme, the method may be annotated with the null securityScheme.",
          "type": "MULTIEDITOR",
          "children": [],
          "valueText": ""
        },
        {
          "title": "type",
          "description": "Instantiation of applyed resource type",
          "type": "ATTRIBUTETEXT",
          "children": [],
          "valueText": null
        }
      ],
      "valueText": null
    }
  ],
  "valueText": null,
  "nodeId": "./someChildUri"
}